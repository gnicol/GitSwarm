%ul.nav.nav-sidebar
  = nav_link do
    = link_to project_path(@project), title: 'Go to project', class: 'back-link' do
      = icon('caret-square-o-left fw')
      %span
        Go to project

  %li.separate-item

  %ul.sidebar-subnav
    = nav_link(path: 'projects#edit') do
      = link_to edit_project_path(@project), title: 'Project Settings' do
        = icon('pencil-square-o fw')
        %span
          Project Settings
    -# gitswarm changes start
    - if PerforceSwarm.ee? && @project.allowed_to_share_with_group?
      = nav_link(controller: :group_links) do
        = link_to namespace_project_group_links_path(@project.namespace, @project), title: 'Groups' do
          = icon('share-square-o fw')
          %span
            Groups
    -# gitswarm changes end
    = nav_link(controller: :deploy_keys) do
      = link_to namespace_project_deploy_keys_path(@project.namespace, @project), title: 'Deploy Keys' do
        = icon('key fw')
        %span
          Deploy Keys
    = nav_link(controller: :hooks) do
      = link_to namespace_project_hooks_path(@project.namespace, @project), title: 'Webhooks' do
        = icon('link fw')
        %span
          Webhooks
    -# gitswarm changes start
    - if PerforceSwarm.ee?
      = nav_link(controller: :git_hooks) do
        = link_to namespace_project_git_hooks_path(@project.namespace, @project) do
          = icon('git-square fw')
          %span
            Git Hooks
    -# gitswarm changes end
    = nav_link(controller: :services) do
      = link_to namespace_project_services_path(@project.namespace, @project), title: 'Services' do
        = icon('cogs fw')
        %span
          Services
    = nav_link(controller: :protected_branches) do
      = link_to namespace_project_protected_branches_path(@project.namespace, @project), title: 'Protected Branches' do
        = icon('lock fw')
        %span
          Protected Branches
    -# gitswarm changes start
    - if PerforceSwarm.ee?
      = nav_link(controller: :mirrors) do
        = link_to namespace_project_mirror_path(@project.namespace, @project), title: 'Mirror Repository', data: {placement: 'right'} do
          = icon('clone fw')
          %span
            Mirror Repository
      = nav_link(controller: :audit_events) do
        = link_to namespace_project_audit_events_path(@project.namespace, @project) do
          = icon('file-text-o fw')
          %span
            Audit Events
    -# gitswarm changes end

    - if @project.builds_enabled?
      = nav_link(controller: :runners) do
        = link_to namespace_project_runners_path(@project.namespace, @project), title: 'Runners' do
          = icon('cog fw')
          %span
            Runners
      = nav_link(controller: :variables) do
        = link_to namespace_project_variables_path(@project.namespace, @project), title: 'Variables' do
          = icon('code fw')
          %span
            Variables
      = nav_link path: 'triggers#index' do
        = link_to namespace_project_triggers_path(@project.namespace, @project), title: 'Triggers' do
          = icon('retweet fw')
          %span
            Triggers
      = nav_link(controller: :badges) do
        = link_to namespace_project_badges_path(@project.namespace, @project), title: 'Badges' do
          = icon('star-half-empty fw')
          %span
            Badges
    -# gitswarm changes start
    = nav_link(path: 'projects#helix_mirroring') do
      = link_to configure_helix_mirroring_namespace_project_path(@project.namespace, @project), title: 'Helix Mirroring', data: {placement: 'right'} do
        = icon('helix-icon white')
        %span.helix-mirroring-item
          Helix Mirroring
    -# gitswarm changes end
