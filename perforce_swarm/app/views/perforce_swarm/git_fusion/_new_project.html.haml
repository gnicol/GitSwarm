.git-fusion-import-data
  - if !@errors.empty?
    .repo-warning.slead
      %h4 There was an error communicating with Helix Git Fusion:
      = @errors.first
      Please see
      = link_to ' this document ', help_page_path('workflow', 'importing', 'import_from_gitfusion') + '#known-issues'
      for help.
  - else
    - repos_options = git_fusion_repos(@repos)
    .git-fusion-radios
      .radio
        = label_tag do
          = radio_button_tag(:git_fusion_repo_create_type, Project::GIT_FUSION_REPO_CREATION_DISABLED, true)
          .option-title
            Not mirrored.
          .option-descr
            Your work will only be stored in Helix GitSwarm.
            %br
            A copy will not be replicated to/from the Helix Versioning Engine (P4D).
      - auto_create_enabled = @depot_exists && @auto_create_errors.empty?
      .radio{:class => ("disabled" unless auto_create_enabled)}
        = label_tag do
          = radio_button_tag(:git_fusion_repo_create_type, Project::GIT_FUSION_REPO_CREATION_AUTO_CREATE, false, disabled: !auto_create_enabled, 'data-keep-disabled' => !auto_create_enabled )
          .option-title
            Create a Helix GitSwarm project to mirror.
            - unless auto_create_enabled
              %i.fa.fa-warning
          .option-descr
            - if auto_create_enabled
              Will create a new Helix GitSwarm project in the Helix Versioning Engine (P4D) under:
              %div
                %code.auto-create-path #{@path_template}
            - elsif !@auto_create_errors.empty?
              Convention-based repository creation is unavailable:
              %br
              = @auto_create_errors.first
              Please see
              = link_to ' this document ', help_page_path('workflow', 'importing', 'import_from_gitfusion') + '#convention-based-repository-configuration'
              for help.
            - elsif !@depot_exists
              Configured project depot #{@project_depot.inspect} is missing.
              Please see
              = link_to ' this document ', help_page_path('workflow', 'importing', 'import_from_gitfusion') + '#convention-based-repository-configuration'
              for help.
      .radio{:class => ("disabled" if @repos.empty?)}
        = label_tag do
          %div.import-repo-wrapper
            = radio_button_tag(:git_fusion_repo_create_type, Project::GIT_FUSION_REPO_CREATION_IMPORT_REPO, false, disabled: @repos.empty?, 'data-keep-disabled' => @repos.empty?)
            .option-title
              Mirror an existing repository.
            .option-descr
              - if @repos.empty?
                .repo-warning.slead
                  Although Helix Git Fusion is configured, there are no repositories available for import.
              - else
                Will mirror an existing Helix project.
                .repo-select.form-inline.control-group
                  Repository:
                  = select_tag(:git_fusion_repo_name, repos_options, class: 'select2 span2', disabled: 'true')
      .radio{:class => ("disabled" unless auto_create_enabled)}
        = label_tag do
          = radio_button_tag(:git_fusion_repo_create_type, Project::GIT_FUSION_REPO_CREATION_FILE_SELECT, false, disabled: !auto_create_enabled, 'data-keep-disabled' => !auto_create_enabled)
          .option-title
            Select files or folder to mirror.
          .option-descr
            Select specific files or folders from the Helix Versioning Engine (P4D)
            %br
            .git-fusion-file-selector-wrapper.hide
              Map folders and files from the Perforce Depot into a branch
              %br
              From this depot folder
              .git-fusion-split-tree.clearfix
                .git-fusion-tree-holder.git-fusion-tree-source.col-sm-7
                  .tree-title.clearfix
                    .branch-label Branch:
                    = text_field_tag 'branch_name', params[:branch_name], placeholder: "branch name",
                      required: false, :'data-keep-disabled' => 'true', class: 'form-control new-branch-name js-quick-submit'
                    .filter-actions
                      .tooltip-wrapper{data: {'original-title' => 'You cannot combine regular and streams depot mappings in the same Git Fusion repository.', placement: 'top'}}
                        %span.btn.depot-type-filter{:'data-toggle' => 'dropdown', :'data-value' => 'depot-regular'}
                          = icon('code-fork')
                          %span.type-text Regular Depots
                          = icon('angle-down')
                        %ul.dropdown-menu.dropdown-menu-right
                          %li
                            %a.depot-stream{:href => '#depot-stream'} Stream Depots
                          %li
                            %a.depot-regular{:href => '#depot-regular'} Regular Depots

                  .tree-content
                    .git-fusion-tree
                  .clearfix
                    .input-group.pull-right.current-mapping.tooltip-wrapper.has_tooltip{title: 'You must select a depot path, and give a name to the new branch.', data: {toggle: 'tooltip'}}
                      %input.current-mapping-path.form-control.disabled{:disabled => 'disabled', :'data-keep-disabled' => 'true', :placeholder => 'select depot path for branch'}
                      .input-group-btn
                        .btn.btn-primary.tree-save.disabled{:disabled => 'disabled'}
                          %span.action Add Branch
                          %span.current-mapping-branch
                  .saved-branches
                    %strong
                      Defined Branches:
                    .panel.panel-default
                      .nothing-here-block
                        = icon('warning', class: 'text-warning')
                        %strong No branches defined
                        %div Use the tree selector to pick a depot path, and give it a name in the field above.
                        %br
                      %ul.well-list.branch-list
