- page_title   'Mirror in Helix'
- header_title 'Mirror in Helix'
-# deal with config errors
- error = git_fusion_server_error || mirroring_errors(@project, current_user)
- if current_user && can?(current_user, :download_code, @project)
  = render 'shared/no_ssh'
  = render 'shared/no_password'
.git-fusion-mirroring
  %h2
    Mirror in Helix
  - if error
    .description.slead
      %h4 Configuration Error:
      %p
        = error
        %br
        For help on configuring your Helix Git Fusion instances, have an admin
        = link_to 'see these directions.', help_page_path('workflow', 'importing', 'import_from_gitfusion'), target: '_blank'
  - else
    - servers = git_fusion_servers(default_first_auto_create: true)
    - if servers.empty?
      .description.slead
        This Helix GitSwarm instance is not pointing to any Helix Git Fusion servers. In order to enable mirroring, have an admin
        = link_to 'see these directions.', help_page_path('workflow', 'importing', 'import_from_gitfusion'), target: '_blank'
    - else
      %h3
        Select a Helix server to mirror the project to
      .control-group.form-inline
        .control-label.mirroring-server-select
          Helix Git Fusion Server:
          = select_tag(:git_fusion_entry, servers, class: 'form-control')
        .git-fusion-mirroring-data
      :javascript
        var mirror_config = new GitFusionMirror("#{@project.id}");
