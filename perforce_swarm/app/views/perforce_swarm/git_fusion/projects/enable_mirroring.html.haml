- page_title    'Mirror in Helix'
- header_title  'Mirror in Helix'
-# deal with config errors by re-using the tooltip code, and put controller-reported errors first
- error        = @errors.first || git_fusion_server_error
- error        = mirroring_tooltip(@project, current_user) unless error
- if current_user && can?(current_user, :download_code, @project)
  = render 'shared/no_ssh'
  = render 'shared/no_password'
.git-fusion-mirroring
  %h2
    Mirror in Helix
  - if error && !error.include?('to get mirroring!')
    .description.slead
      %h4 Configuration Error:
      %p
        = error
      %p
        For help on configuring your Helix Git Fusion instances, have an admin
        = link_to 'see these directions.', help_page_path('workflow', 'importing', 'import_from_gitfusion'), target: '_blank'
  - else
    %h3
      Select a Helix server to mirror the project to
    .control-group.form-inline
      .control-label.mirroring-server-select
        Helix Git Fusion Server:
        = select_tag(:git_fusion_entry, git_fusion_servers(true), class: 'form-control')
    .git-fusion-mirroring-data
  :javascript
    var mirror_config = new GitFusionMirror("#{@project.id}");
