- page_title   'Helix Mirroring'
- header_title 'Helix Mirroring'

- error = git_fusion_server_error || mirroring_errors(@project, current_user)
- if current_user && can?(current_user, :download_code, @project)
  = render 'shared/no_ssh'
  = render 'shared/no_password'
.git-fusion-mirroring
  %h2
    Helix Mirroring
  .description.slead
  - if error && !error.empty?
    %h4 Configuration Error:
    %p
      = error
      %br
      For help on configuring your Helix Git Fusion instances, have an admin
      = link_to 'see these directions.', help_page_path('workflow', 'importing', 'import_from_gitfusion'), target: '_blank'
  - else
    - if @project.git_fusion_mirrored?
      -# currently mirrored, so show relevant mirroring settings and the disable button
      = render partial: 'perforce_swarm/git_fusion/projects/currently_mirrored_settings'
    - elsif @project.git_fusion_repo.present?
      -# project is not currently mirrored, but a repo is specified; it is a candidate for re-enabling mirroring
      = render partial: 'perforce_swarm/git_fusion/projects/previously_mirrored_settings'
    - else
      -# project isn't currently mirrored, so show the configure mirroring form
      = render partial: 'perforce_swarm/git_fusion/projects/configure_helix_mirroring'
:javascript
  $('.js-timeago').timeago()
