- page_title   'Helix Mirroring'
- header_title 'Helix Mirroring'

- error = git_fusion_server_error || mirroring_errors(@project, current_user)
- if current_user && can?(current_user, :download_code, @project)
  = render 'shared/no_ssh'
  = render 'shared/no_password'
.git-fusion-mirroring
  %h2
    Helix Mirroring
    %h3
      Helix Mirroring Status:
      = mirrored?(@project) ? 'Mirrored' : 'Not Mirrored'
    .description.slead
    - if error && !error.empty?
      %h4 Configuration Error:
      %p
        = error
        %br
        For help on configuring your Helix Git Fusion instances, have an admin
        = link_to 'see these directions.', help_page_path('workflow', 'importing', 'import_from_gitfusion'), target: '_blank'
    - else
    - if current_user
      - can_mirror   = mirroring_permitted?(@project, current_user) && mirroring_configured?
      - button_class = 'btn btn-save' + (can_mirror ? '' : ' disabled')
      - if mirrored?(@project)
        -# currently mirrored, so show the disable button
        %span.mirror-button-wrapper
          = link_to '#', { class: button_class, data: { confirm: 'Are you sure you want to disable Helix Mirroring?' } } do
            = icon 'helix-icon-white'
            Disable Helix Mirroring
      - else
        -# project isn't currently mirrored, so show the configure mirroring form
        = render partial: 'perforce_swarm/git_fusion/projects/configure_helix_mirroring'