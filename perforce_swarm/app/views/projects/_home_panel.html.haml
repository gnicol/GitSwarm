- empty_repo = @project.empty_repo?
.project-home-panel.cover-block.clearfix{:class => ("empty-project" if empty_repo)}
  .project-identicon-holder
    = project_icon(@project, alt: '', class: 'project-avatar avatar s90')
  .project-home-desc
    %h1= @project.name
    - if @project.description.present?
      = markdown(@project.description, pipeline: :description)

    - if forked_from_project = @project.forked_from_project
      %p
        Forked from
        = link_to project_path(forked_from_project) do
          = forked_from_project.namespace.try(:name)
  .cover-controls.left
    .visibility-level-label.has_tooltip{title: project_visibility_level_description(@project.visibility_level), data: { container: 'body' } }
      = visibility_level_icon(@project.visibility_level, fw: false)
      = visibility_level_label(@project.visibility_level)

  .project-repo-buttons
    .split-one.count-buttons
      = render 'projects/buttons/star'
      = render 'projects/buttons/fork'

      - if can? current_user, :download_code, @project
        = link_to archive_namespace_project_repository_path(@project.namespace, @project, ref: @ref, format: 'zip'), class: 'btn', rel: 'nofollow' do
          = icon('download fw')
          Download

    -# gitswarm changes start
    - if current_user
      - helix_mirroring_button(@project, current_user)
    -# gitswarm changes end

    = render "shared/clone_panel"

    .split-repo-buttons
      = render "projects/buttons/download"
      = render 'projects/buttons/dropdown'

    = render 'projects/buttons/notifications'

:javascript
  new Star();
