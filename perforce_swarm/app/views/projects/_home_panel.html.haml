- empty_repo = @project.empty_repo?
.project-home-panel.clearfix{:class => ("empty-project" if empty_repo)}
  .project-identicon-holder
    = project_icon(@project, alt: '', class: 'project-avatar avatar s90')
  .project-home-desc
    %h1= @project.name
    - if @project.description.present?
      = markdown(@project.description, pipeline: :description)

    - if forked_from_project = @project.forked_from_project
      %p
        Forked from
        = link_to project_path(forked_from_project) do
          = forked_from_project.namespace.try(:name)



  .project-repo-buttons
    = render 'projects/buttons/star'

    - unless empty_repo
      = render 'projects/buttons/fork'

      - if can? current_user, :download_code, @project
        = link_to archive_namespace_project_repository_path(@project.namespace, @project, ref: @ref, format: 'zip'), class: 'btn', rel: 'nofollow' do
          = icon('download fw')
          Download
    -# gitswarm changes start
    - if !@project.git_fusion_mirrored? && current_user
      %span.has_tooltip.mirror-button-wrapper{data: {title: mirroring_tooltip(@project, current_user, true), html: 'true'}}
        = link_to configure_helix_mirroring_namespace_project_path(@project.namespace, @project), class: "btn #{'disabled' unless mirroring_permitted?(@project, current_user) && mirroring_configured?}" do
          = icon 'helix-icon-white'
          Mirror in Helix
    -# gitswarm changes end

    = render 'projects/buttons/notifications'

    = render 'projects/buttons/dropdown'

  = render "shared/clone_panel"
